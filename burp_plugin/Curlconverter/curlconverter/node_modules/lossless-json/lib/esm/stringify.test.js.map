{"version":3,"file":"stringify.test.js","names":["Decimal","expect","test","LosslessNumber","stringify","lln","value","undefined","toEqual","Symbol","Boolean","Number","POSITIVE_INFINITY","NaN","String","JSON","Date","console","log","a","b","c","d","e","toJSON","expected","json","stringified","bigint","decimalStringifier","isDecimal","toString","numberStringifiers","values","toBe","wrongStringifier","toThrow","context","key","logs","push","logs2","replacer"],"sources":["../../src/stringify.test.ts"],"sourcesContent":["import Decimal from 'decimal.js'\nimport { expect, test } from 'vitest'\nimport { LosslessNumber, type NumberStringifier, stringify } from './index'\nimport type { GenericObject } from './types'\n\n// helper function to create a lossless number\nfunction lln(value: string) {\n  return new LosslessNumber(value)\n}\n\ntest('stringify', () => {\n  expect(stringify(undefined)).toEqual(undefined)\n  expect(stringify(() => {})).toEqual(undefined)\n  expect(stringify(Symbol('test'))).toEqual(undefined)\n\n  expect(stringify(null)).toEqual('null')\n\n  expect(stringify(true)).toEqual('true')\n  expect(stringify(false)).toEqual('false')\n  expect(stringify(new Boolean(true))).toEqual('true')\n  expect(stringify(new Boolean(false))).toEqual('false')\n\n  expect(stringify(2.3)).toEqual('2.3')\n  expect(stringify(new Number(2.3))).toEqual('2.3')\n  expect(stringify(-2.3)).toEqual('-2.3')\n  expect(stringify(Number.POSITIVE_INFINITY)).toEqual('null')\n  expect(stringify(Number.NaN)).toEqual('null')\n\n  expect(stringify('str')).toEqual('\"str\"')\n  expect(stringify(new String('str'))).toEqual('\"str\"')\n  expect(stringify('\"')).toEqual('\"\\\\\"\"')\n  expect(stringify('\\\\')).toEqual('\"\\\\\\\\\"')\n  expect(stringify('\\b')).toEqual('\"\\\\b\"')\n  expect(stringify('\\f')).toEqual('\"\\\\f\"')\n  expect(stringify('\\n')).toEqual('\"\\\\n\"')\n  expect(stringify('\\r')).toEqual('\"\\\\r\"')\n  expect(stringify('\\t')).toEqual('\"\\\\t\"')\n  expect(stringify('\"\\\\/\\b\\f\\n\\r\\t')).toEqual('\"\\\\\"\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\\\t\"')\n\n  // validate expected outcome against native JSON.stringify\n  expect(JSON.stringify('\"\\\\/\\b\\f\\n\\r\\t')).toEqual('\"\\\\\"\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\\\t\"')\n\n  expect(stringify(new Date('2016-02-08T14:00:00Z'))).toEqual('\"2016-02-08T14:00:00.000Z\"')\n\n  expect(\n    stringify([\n      2,\n      'str',\n      null,\n      undefined,\n      true,\n      () => {\n        console.log('test')\n      }\n    ])\n  ).toEqual('[2,\"str\",null,null,true,null]')\n\n  expect(\n    stringify({\n      a: 2,\n      b: 'str',\n      c: null,\n      d: undefined,\n      e: () => {\n        console.log('test')\n      }\n    })\n  ).toEqual('{\"a\":2,\"b\":\"str\",\"c\":null}')\n\n  expect(stringify({ '\\\\\\\\d': 1 })).toEqual('{\"\\\\\\\\\\\\\\\\d\":1}')\n\n  // validate exepected outcome against native JSON.stringify\n  expect(JSON.stringify({ '\\\\\\\\d': 1 })).toEqual('{\"\\\\\\\\\\\\\\\\d\":1}')\n\n  expect(\n    stringify({\n      a: 2,\n      toJSON: () => 'foo'\n    })\n  ).toEqual('\"foo\"')\n\n  // TODO: Symbol\n  // TODO: ignore non-enumerable properties\n})\n\ntest('stringify a full JSON object', () => {\n  const expected = '{\"a\":123,\"b\":\"str\",\"c\":null,\"d\":false,\"e\":[1,2,3]}'\n  const json: GenericObject<unknown> = {\n    a: lln('123'),\n    b: 'str',\n    c: null,\n    d: false,\n    e: [1, 2, 3]\n  }\n\n  const stringified = stringify(json)\n\n  expect(stringified).toEqual(expected)\n})\n\ntest('stringify bigint', () => {\n  expect(stringify(123n)).toEqual('123')\n  expect(stringify({ bigint: 123n })).toEqual('{\"bigint\":123}')\n})\n\ntest('stringify Date', () => {\n  expect(stringify([new Date('2022-08-25T09:39:19.288Z')])).toEqual('[\"2022-08-25T09:39:19.288Z\"]')\n})\n\ntest('stringify Decimal', () => {\n  const decimalStringifier: NumberStringifier = {\n    test: (value: unknown) => Decimal.isDecimal(value),\n    stringify: (value: unknown) => (value as Decimal).toString()\n  }\n  const numberStringifiers = [decimalStringifier]\n\n  const a = new Decimal('123456789123456789123456789')\n\n  expect(stringify(a, undefined, undefined, numberStringifiers)).toEqual(\n    '1.23456789123456789123456789e+26'\n  )\n\n  const values = [\n    new Decimal('1.23456789123456789123456789e+26'),\n    new Decimal('2.3'),\n    new Decimal('123')\n  ]\n\n  expect(stringify(values, undefined, undefined, numberStringifiers)).toEqual(\n    '[1.23456789123456789123456789e+26,2.3,123]'\n  )\n})\n\ntest('should not have a .toJSON method implemented', () => {\n  expect('toJSON' in lln('123')).toBe(false)\n})\n\ntest('should throw an error when the output of a number stringifier is not a number', () => {\n  const wrongStringifier = {\n    test: (value: unknown) => typeof value === 'number',\n    stringify: (value: unknown) => `oopsie${value}` // <-- does not return a valid number\n  }\n\n  expect(() => stringify([4], undefined, undefined, [wrongStringifier])).toThrow(\n    'Invalid JSON number: output of a number stringifier must be a string containing a JSON number (output: oopsie4)'\n  )\n})\n\ntest('stringify should keep formatting of a lossless number', () => {\n  expect(stringify([lln('4.0')])).toEqual('[4.0]')\n})\n\ntest('stringify with replacer function', () => {\n  const json: GenericObject<unknown> = {\n    a: 123,\n    b: 'str',\n    c: null,\n    d: false,\n    e: [1, 2, 3]\n  }\n\n  interface Log {\n    context: unknown\n    key: string\n    value: unknown\n  }\n\n  const expected: Log[] = [\n    {\n      context: { '': { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] } },\n      key: '',\n      value: { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] }\n    },\n    {\n      context: { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] },\n      key: 'a',\n      value: 123\n    },\n    {\n      context: { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] },\n      key: 'b',\n      value: 'str'\n    },\n    {\n      context: { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] },\n      key: 'c',\n      value: null\n    },\n    {\n      context: { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] },\n      key: 'd',\n      value: false\n    },\n    {\n      context: { a: 123, b: 'str', c: null, d: false, e: [1, 2, 3] },\n      key: 'e',\n      value: [1, 2, 3]\n    },\n    {\n      context: [1, 2, 3],\n      key: '0',\n      value: 1\n    },\n    {\n      context: [1, 2, 3],\n      key: '1',\n      value: 2\n    },\n    {\n      context: [1, 2, 3],\n      key: '2',\n      value: 3\n    }\n  ]\n\n  const logs: Log[] = []\n  stringify(json, function (key, value) {\n    // @ts-expect-error\n    logs.push({ context: this, key, value })\n    return value\n  })\n  expect(logs).toEqual(expected)\n\n  // validate expected outcome against native JSON.stringify\n  const logs2: Log[] = []\n  JSON.stringify(json, function (key, value) {\n    logs2.push({ context: this, key, value })\n    return value\n  })\n  expect(logs2).toEqual(expected)\n})\n\ntest('stringify with replacer function (2)', () => {\n  const json = { a: 123, b: 'str', c: 'ignoreMe' }\n\n  const expected = '{\"a\":\"number:a:123\",\"b\":\"string:b:str\"}'\n\n  function replacer(key: string, value: unknown): unknown {\n    if (key === 'c') {\n      return undefined\n    }\n\n    if (typeof value === 'number') {\n      return `number:${key}:${value}`\n    }\n    if (typeof value === 'string') {\n      return `string:${key}:${value}`\n    }\n\n    return value\n  }\n\n  expect(stringify(json, replacer)).toEqual(expected)\n\n  // validate expected outcome against native JSON.stringify\n  expect(JSON.stringify(json, replacer)).toEqual(expected)\n})\n\ntest('stringify with replacer Array', () => {\n  const json = {\n    a: 1,\n    c: { a: 1, b: 2, c: 3, d: 4 },\n    b: [1, 2, 3],\n    d: 4,\n    42: 'universe'\n  }\n  const replacer = ['a', 'b', 'c', 42]\n\n  // validate expected outcome against native JSON.stringify\n  const expected = '{\"a\":1,\"b\":[1,2,3],\"c\":{\"a\":1,\"b\":2,\"c\":3},\"42\":\"universe\"}'\n  expect(JSON.stringify(json, replacer)).toEqual(expected)\n\n  expect(stringify(json, replacer)).toEqual(expected)\n})\n\ntest('stringify with numeric space', () => {\n  const json: unknown = { a: 1, b: [1, 2, null, undefined, { c: 3 }], d: null }\n\n  const expected =\n    '{\\n' +\n    '  \"a\": 1,\\n' +\n    '  \"b\": [\\n' +\n    '    1,\\n' +\n    '    2,\\n' +\n    '    null,\\n' +\n    '    null,\\n' +\n    '    {\\n' +\n    '      \"c\": 3\\n' +\n    '    }\\n' +\n    '  ],\\n' +\n    '  \"d\": null\\n' +\n    '}'\n\n  expect(stringify(json, null, 2)).toEqual(expected)\n\n  // validate expected outcome against native JSON.stringify\n  expect(JSON.stringify(json, null, 2)).toEqual(expected)\n})\n\ntest('stringify with string space', () => {\n  const json: unknown = { a: 1, b: [1, 2, null, undefined, { c: 3 }], d: null }\n\n  const expected =\n    '{\\n' +\n    '~\"a\": 1,\\n' +\n    '~\"b\": [\\n' +\n    '~~1,\\n' +\n    '~~2,\\n' +\n    '~~null,\\n' +\n    '~~null,\\n' +\n    '~~{\\n' +\n    '~~~\"c\": 3\\n' +\n    '~~}\\n' +\n    '~],\\n' +\n    '~\"d\": null\\n' +\n    '}'\n\n  expect(stringify(json, null, '~')).toEqual(expected)\n\n  // validate expected outcome against native JSON.stringify\n  expect(JSON.stringify(json, null, '~')).toEqual(expected)\n})\n\ntest('stringify an empty array', () => {\n  expect(stringify([], null, 2)).toEqual('[]')\n  expect(stringify([], null, '    ')).toEqual('[]')\n})\n\ntest('stringify an empty object', () => {\n  expect(stringify({}, null, 2)).toEqual('{}')\n  expect(stringify({}, null, '    ')).toEqual('{}')\n})\n"],"mappings":"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","ignoreList":[]}