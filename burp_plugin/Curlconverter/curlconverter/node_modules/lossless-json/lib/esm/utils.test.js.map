{"version":3,"file":"utils.test.js","names":["expect","test","UnsafeNumberReason","extractSignificantDigits","getUnsafeNumberReason","isInteger","isNumber","isSafeNumber","toSafeNumberOrThrow","toEqual","approx","toBe","undefined","overflow","underflow","truncate_integer","truncate_float","toThrow"],"sources":["../../src/utils.test.ts"],"sourcesContent":["import { expect, test } from 'vitest'\nimport {\n  UnsafeNumberReason,\n  extractSignificantDigits,\n  getUnsafeNumberReason,\n  isInteger,\n  isNumber,\n  isSafeNumber,\n  toSafeNumberOrThrow\n} from './utils'\n\ntest('isInteger', () => {\n  expect(isInteger('4250')).toEqual(true)\n  expect(isInteger('-4250')).toEqual(true)\n  expect(isInteger('2.345')).toEqual(false)\n})\n\ntest('isNumber', () => {\n  expect(isNumber('4250')).toEqual(true)\n  expect(isNumber('-4250')).toEqual(true)\n  expect(isNumber('2.345')).toEqual(true)\n  expect(isNumber('2.345e3')).toEqual(true)\n  expect(isNumber('2.345e+3')).toEqual(true)\n  expect(isNumber('2.345e-3')).toEqual(true)\n  expect(isNumber('2.3450e-3')).toEqual(true)\n  expect(isNumber('-2.3450e-3')).toEqual(true)\n})\n\ntest('isSafeNumber', () => {\n  expect(isSafeNumber('2.3')).toEqual(true)\n  expect(isSafeNumber('2.3e4')).toEqual(true)\n  expect(isSafeNumber('1234567890')).toEqual(true)\n\n  expect(isSafeNumber('2e500')).toEqual(false)\n  expect(isSafeNumber('2e-500')).toEqual(false)\n  expect(isSafeNumber('0.66666666666666666667')).toEqual(false)\n  expect(isSafeNumber('12345678901234567890')).toEqual(false)\n  expect(isSafeNumber('1.2345678901234567890')).toEqual(false)\n\n  // the following number loses formatting, but the value stays the same and hence is safe\n  expect(isSafeNumber('2.300')).toEqual(true)\n})\n\ntest('isSafeNumber({ approx: false })', () => {\n  expect(isSafeNumber('0.66666666666666666667', { approx: false })).toEqual(false)\n  expect(isSafeNumber('1.2345678901234567890', { approx: false })).toEqual(false)\n})\n\ntest('isSafeNumber({ approx: true })', () => {\n  expect(isSafeNumber('2.3', { approx: true })).toEqual(true)\n  expect(isSafeNumber('2.3e4', { approx: true })).toEqual(true)\n  expect(isSafeNumber('1234567890', { approx: true })).toEqual(true)\n\n  expect(isSafeNumber('0.66666666666666666667', { approx: true })).toEqual(true)\n  expect(isSafeNumber('0.666666666666667', { approx: true })).toEqual(true)\n  expect(isSafeNumber('0.66666666666667', { approx: true })).toEqual(true)\n  expect(isSafeNumber('0.2345678901234567890', { approx: true })).toEqual(true)\n\n  expect(isSafeNumber('2e500', { approx: true })).toEqual(false)\n  expect(isSafeNumber('2e-500', { approx: true })).toEqual(false)\n  expect(isSafeNumber('12345678901234567890', { approx: true })).toEqual(false)\n})\n\ntest('getUnsafeNumberReason', () => {\n  expect(getUnsafeNumberReason('123')).toBe(undefined)\n  expect(getUnsafeNumberReason('0.666666667')).toBe(undefined)\n  expect(getUnsafeNumberReason('1e500')).toBe(UnsafeNumberReason.overflow)\n  expect(getUnsafeNumberReason('1e-500')).toBe(UnsafeNumberReason.underflow)\n  expect(getUnsafeNumberReason('12345678901234567890')).toBe(UnsafeNumberReason.truncate_integer)\n  expect(getUnsafeNumberReason('0.66666666666666666667')).toBe(UnsafeNumberReason.truncate_float)\n})\n\ntest('toSafeNumberOrThrow', () => {\n  expect(toSafeNumberOrThrow('123')).toBe(123)\n  expect(toSafeNumberOrThrow('0.666666667')).toBe(0.666666667)\n\n  expect(() => toSafeNumberOrThrow('1e500')).toThrow(\n    \"Cannot safely convert to number: the value '1e500' would overflow and become Infinity\"\n  )\n  expect(() => toSafeNumberOrThrow('1e-500')).toThrow(\n    \"Cannot safely convert to number: the value '1e-500' would underflow and become 0\"\n  )\n  expect(() => toSafeNumberOrThrow('12345678901234567890')).toThrow(\n    \"Cannot safely convert to number: the value '12345678901234567890' would truncate and become 12345678901234567000\"\n  )\n  expect(() => toSafeNumberOrThrow('0.66666666666666666667')).toThrow(\n    \"Cannot safely convert to number: the value '0.66666666666666666667' would truncate and become 0.6666666666666666\"\n  )\n})\n\ntest('toSafeNumberOrThrow({ approx: true })', () => {\n  expect(toSafeNumberOrThrow('123', { approx: true })).toBe(123)\n  expect(toSafeNumberOrThrow('0.666666667', { approx: true })).toBe(0.666666667)\n\n  expect(() => toSafeNumberOrThrow('1e500', { approx: true })).toThrow(\n    \"Cannot safely convert to number: the value '1e500' would overflow and become Infinity\"\n  )\n  expect(() => toSafeNumberOrThrow('1e-500', { approx: true })).toThrow(\n    \"Cannot safely convert to number: the value '1e-500' would underflow and become 0\"\n  )\n  expect(() => toSafeNumberOrThrow('12345678901234567890', { approx: true })).toThrow(\n    \"Cannot safely convert to number: the value '12345678901234567890' would truncate and become 12345678901234567000\"\n  )\n  expect(toSafeNumberOrThrow('0.66666666666666666667', { approx: true })).toBe(0.6666666666666666)\n})\n\ntest('extractSignificantDigits', () => {\n  expect(extractSignificantDigits('2.345')).toEqual('2345')\n  expect(extractSignificantDigits('23e4')).toEqual('23')\n  expect(extractSignificantDigits('230000')).toEqual('23')\n  expect(extractSignificantDigits('-77')).toEqual('77')\n  expect(extractSignificantDigits('0.003400')).toEqual('34')\n  expect(extractSignificantDigits('120.5e+30')).toEqual('1205')\n  expect(extractSignificantDigits('120.5e-30')).toEqual('1205')\n  expect(extractSignificantDigits('0120.50E-30')).toEqual('1205')\n  expect(extractSignificantDigits('01200')).toEqual('12')\n  expect(extractSignificantDigits('-01200')).toEqual('12')\n})\n"],"mappings":"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","ignoreList":[]}