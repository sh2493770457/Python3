!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).LosslessJSON={})}(this,(function(t){"use strict";function e(t){return r.test(t)}const r=/^-?[0-9]+$/;function n(t){return o.test(t)}const o=/^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?$/;function i(t,r){const n=Number.parseFloat(t),o=String(n),i=a(t),u=a(o);if(i===u)return!0;if(!0===r?.approx){const r=14;if(!e(t)&&u.length>=r&&i.startsWith(u.substring(0,r)))return!0}return!1}let u=function(t){return t.underflow="underflow",t.overflow="overflow",t.truncate_integer="truncate_integer",t.truncate_float="truncate_float",t}({});function c(t){if(i(t,{approx:!1}))return;if(e(t))return u.truncate_integer;const r=Number.parseFloat(t);return Number.isFinite(r)?0===r?u.underflow:u.truncate_float:u.overflow}function a(t){return t.replace(f,"").replace(l,"").replace(d,"").replace(s,"")}const f=/[eE][+-]?\d+$/,s=/^-?(0*)?/,l=/\./,d=/0+$/;class h{isLosslessNumber=!0;constructor(t){if(!n(t))throw new Error(`Invalid number (value: "${t}")`);this.value=t}valueOf(){const t=c(this.value);if(void 0===t||t===u.truncate_float)return Number.parseFloat(this.value);if(e(this.value))return BigInt(this.value);throw new Error(`Cannot safely convert to number: the value '${this.value}' would ${t} and become ${Number.parseFloat(this.value)}`)}toString(){return this.value}}function p(t){return t&&"object"==typeof t&&!0===t.isLosslessNumber||!1}function y(t){return new h(t)}function b(t,e,r,n){return Array.isArray(r)?n.call(t,e,function(t,e){for(let r=0;r<t.length;r++)t[r]=b(t,String(r),t[r],e);return t}(r,n)):r&&"object"==typeof r&&!p(r)?n.call(t,e,function(t,e){for(const r of Object.keys(t)){const n=b(t,r,t[r],e);void 0!==n?t[r]=n:delete t[r]}return t}(r,n)):n.call(t,e,r)}function w(t){return t>=J&&t<=B||t>=Q&&t<=Z||t>=U&&t<=q}function g(t){return t>=J&&t<=B}function v(t,e){if(t===e)return!0;if(Array.isArray(t)&&Array.isArray(e))return t.length===e.length&&t.every(((t,r)=>v(t,e[r])));if(m(t)&&m(e)){return[...new Set([...Object.keys(t),...Object.keys(e)])].every((r=>v(t[r],e[r])))}return!1}function m(t){return"object"==typeof t&&null!==t}const A={'"':'"',"\\":"\\","/":"/",b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"},$=92,C=123,N=125,S=91,x=93,E=32,O=10,I=9,j=13,k=34,_=43,F=45,J=48,L=49,B=57,D=44,T=46,R=58,Q=65,U=97,P=69,W=101,Z=70,q=102;const z=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z$/;t.LosslessNumber=h,t.UnsafeNumberReason=u,t.config=function(t){throw new Error("config is deprecated, support for circularRefs is removed from the library. If you encounter circular references in your data structures, please rethink your datastructures: better prevent circular references in the first place.")},t.getUnsafeNumberReason=c,t.isInteger=e,t.isLosslessNumber=p,t.isNumber=n,t.isSafeNumber=i,t.parse=function(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:y,n=0;const o=c();return function(t){if(void 0===t)throw new SyntaxError(`JSON value expected ${H()}`)}(o),function(){if(n<t.length)throw new SyntaxError(`Expected end of input ${H()}`)}(),e?function(t,e){return b({"":t},"",t,e)}(o,e):o;function i(){if(t.charCodeAt(n)===C){n++,f();const e={};let r=!0;for(;n<t.length&&t.charCodeAt(n)!==N;){r?r=!1:(l(),f());const t=n,o=s();if(void 0===o)return void m();f(),d();const i=c();if(void 0===i)return void q();Object.prototype.hasOwnProperty.call(e,o)&&!v(i,e[o])&&Q(o,t+1),e[o]=i}return t.charCodeAt(n)!==N&&function(){throw new SyntaxError(`Quoted object key or end of object '}' expected ${H()}`)}(),n++,e}}function u(){if(t.charCodeAt(n)===S){n++,f();const e=[];let r=!0;for(;n<t.length&&t.charCodeAt(n)!==x;){r?r=!1:l();const t=c();h(t),e.push(t)}return t.charCodeAt(n)!==x&&function(){throw new SyntaxError(`Array item or end of array ']' expected ${H()}`)}(),n++,e}}function c(){f();const e=s()??function(){const e=n;t.charCodeAt(n)===F&&(n++,p(e));if(t.charCodeAt(n)===J)n++;else if(o=t.charCodeAt(n),o>=L&&o<=B)for(n++;g(t.charCodeAt(n));)n++;var o;if(t.charCodeAt(n)===T)for(n++,p(e);g(t.charCodeAt(n));)n++;if(t.charCodeAt(n)===W||t.charCodeAt(n)===P)for(n++,t.charCodeAt(n)!==F&&t.charCodeAt(n)!==_||n++,p(e);g(t.charCodeAt(n));)n++;if(n>e)return r(t.slice(e,n))}()??i()??u()??a("true",!0)??a("false",!1)??a("null",null);return f(),e}function a(e,r){if(t.slice(n,n+e.length)===e)return n+=e.length,r}function f(){for(;(e=t.charCodeAt(n))===E||e===O||e===I||e===j;)n++;var e}function s(){if(t.charCodeAt(n)===k){n++;let r="";for(;n<t.length&&t.charCodeAt(n)!==k;){if(t.charCodeAt(n)===$){const e=t[n+1],o=A[e];void 0!==o?(r+=o,n++):"u"===e?w(t.charCodeAt(n+2))&&w(t.charCodeAt(n+3))&&w(t.charCodeAt(n+4))&&w(t.charCodeAt(n+5))?(r+=String.fromCharCode(Number.parseInt(t.slice(n+2,n+6),16)),n+=5):z(n):Z(n)}else(e=t.charCodeAt(n))>=32&&e<=1114111?r+=t[n]:U(t[n]);n++}return function(){if(t.charCodeAt(n)!==k)throw new SyntaxError(`End of string '"' expected ${H()}`)}(),n++,r}var e}function l(){if(t.charCodeAt(n)!==D)throw new SyntaxError(`Comma ',' expected after value ${H()}`);n++}function d(){if(t.charCodeAt(n)!==R)throw new SyntaxError(`Colon ':' expected after property name ${H()}`);n++}function h(t){if(void 0===t)throw new SyntaxError(`Array item expected ${H()}`)}function p(e){if(!g(t.charCodeAt(n))){const r=t.slice(e,n);throw new SyntaxError(`Invalid number '${r}', expecting a digit ${H()}`)}}function m(){throw new SyntaxError(`Quoted object key expected ${H()}`)}function Q(t,e){throw new SyntaxError(`Duplicate key '${t}' encountered at position ${e}`)}function U(t){throw new SyntaxError(`Invalid character '${t}' ${G()}`)}function Z(e){const r=t.slice(e,e+2);throw new SyntaxError(`Invalid escape character '${r}' ${G()}`)}function q(){throw new SyntaxError(`Object value expected after ':' ${G()}`)}function z(e){const r=t.slice(e,e+6);throw new SyntaxError(`Invalid unicode character '${r}' ${G()}`)}function G(){return`at position ${n}`}function H(){return`${n<t.length?`but got '${t[n]}'`:"but reached end of input"} ${G()}`}},t.parseLosslessNumber=y,t.parseNumberAndBigInt=function(t){return e(t)?BigInt(t):Number.parseFloat(t)},t.reviveDate=function(t,e){return"string"==typeof e&&z.test(e)?new Date(e):e},t.stringify=function t(e,r,o,i){const u=function(t){if("number"==typeof t)return" ".repeat(t);if("string"==typeof t&&""!==t)return t;return}(o);return c("function"==typeof r?r.call({"":e},"",e):e,"");function c(e,f){if(Array.isArray(i)){const t=i.find((t=>t.test(e)));if(t){const r=t.stringify(e);if("string"!=typeof r||!n(r))throw new Error(`Invalid JSON number: output of a number stringifier must be a string containing a JSON number (output: ${r})`);return r}}return"boolean"==typeof e||"number"==typeof e||"string"==typeof e||null===e||e instanceof Date||e instanceof Boolean||e instanceof Number||e instanceof String?JSON.stringify(e):e?.isLosslessNumber||"bigint"==typeof e?e.toString():Array.isArray(e)?function(t,e){if(0===t.length)return"[]";const n=u?e+u:void 0;let o=u?"[\n":"[";for(let e=0;e<t.length;e++){const i="function"==typeof r?r.call(t,String(e),t[e]):t[e];u&&(o+=n),o+=void 0!==i&&"function"!=typeof i?c(i,n):"null",e<t.length-1&&(o+=u?",\n":",")}return o+=u?`\n${e}]`:"]",o}(e,f):e&&"object"==typeof e?function(e,n){if("function"==typeof e.toJSON)return t(e.toJSON(),r,o,void 0);const i=Array.isArray(r)?r.map(String):Object.keys(e);if(0===i.length)return"{}";const f=u?n+u:void 0;let s=!0,l=u?"{\n":"{";for(const t of i){const n="function"==typeof r?r.call(e,t,e[t]):e[t];if(a(t,n)){s?s=!1:l+=u?",\n":",";const e=JSON.stringify(t);l+=u?`${f+e}: `:`${e}:`,l+=c(n,f)}}return l+=u?`\n${n}}`:"}",l}(e,f):void 0}function a(t,e){return void 0!==e&&"function"!=typeof e&&"symbol"!=typeof e}},t.toLosslessNumber=function(t){if(a(String(t)).length>15)throw new Error(`Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself (value: ${t})`);if(Number.isNaN(t))throw new Error("Invalid number: NaN");if(!Number.isFinite(t))throw new Error(`Invalid number: ${t}`);return new h(String(t))},t.toSafeNumberOrThrow=function(t,e){const r=Number.parseFloat(t),n=c(t);if(!0===e?.approx?n&&n!==u.truncate_float:n){const e=n?.replace(/_\w+$/,"");throw new Error(`Cannot safely convert to number: the value '${t}' would ${e} and become ${r}`)}return r}}));//# sourceMappingURL=lossless-json.js.map
